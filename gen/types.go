// Copyright (c) 2023 under the MIT license per gql-rapid-gen/LICENSE.MD

package gen

const (
	GO_GEN  = "go_gen"
	GO_SKEL = "go_skel"
	TS_GEN  = "ts_gen"
	TF_GEN  = "tf_gen"
	TF_SKEL = "tf_skel"
)

var Types = map[string]Type{
	"go_gen": {
		Header: `package data
// Code generated by gql-rapid-gen DO NOT EDIT.
// This file is derivative of gql-rapid-gen templates.
// Template Copyright (c) 2023 under the MIT license per gql-rapid-gen/LICENSE.MD.
`,
		Extension:       ".gen.go",
		Format:          formatGo,
		GenerateIfEmpty: false,
		DirectoryPrefix: "go/data/",
	},
	"go_skel": {
		Header: `package data
// Skeleton generated by gql-rapid-gen.
// This file is derivative of gql-rapid-gen templates.
// Template Copyright (c) 2023 under the MIT license per gql-rapid-gen/LICENSE.MD.
`,
		Extension:       ".go",
		Format:          formatGo,
		GenerateIfEmpty: true,
		DirectoryPrefix: "go/data/",
	},
	"ts_gen": {
		Header: `
// Skeleton generated by gql-rapid-gen.
// This file is derivative of gql-rapid-gen templates.
// Template Copyright (c) 2023 under the MIT license per gql-rapid-gen/LICENSE.MD.
`,
		Extension:       ".gen.tsx",
		GenerateIfEmpty: false,
		DirectoryPrefix: "frontend/src/",
	},
	"tf_gen": {
		Header: `
// Skeleton generated by gql-rapid-gen.
// This file is derivative of gql-rapid-gen templates.
// Template Copyright (c) 2023 under the MIT license per gql-rapid-gen/LICENSE.MD.
`,
		Extension:       ".gen.tf",
		GenerateIfEmpty: false,
		DirectoryPrefix: "infra/",
	},
	"tf_skel": {},
}

type Type struct {
	Header          string
	Extension       string
	DirectoryPrefix string
	Format          func(string) (string, error)
	GenerateIfEmpty bool
}
