
resource "aws_appsync_resolver" "{{$.Object.Name}}-{{$.Field.Name}}" {
  api_id      = aws_appsync_graphql_api.backend.id
  type        = "{{$.Object.Name}}"
  field       = "{{$.Field.Name}}"
  data_source = aws_appsync_datasource.{{$.Table}}.name

  request_template = <<EOF
#if(!$context.source.{{$.FieldSource.Name}} || $context.source.{{$.FieldSource.Name}}.size() == 0)
    #return([])
#else
#set($ids = [])
#foreach($id in $${context.source.{{$.FieldSource.Name}}})
    {{- if $.FieldSource.HasDirective "normalise"}}
    #set($id = {{$.FieldSource.NormaliseVTL "$id"}})
    {{- end}}
    #set($map = {})
    $util.qr($map.put("{{$.FieldForeign}}", $util.dynamodb.toString($id)))
    $util.qr($ids.add($map))
#end
{
    "version": "2018-05-29",
    "operation": "BatchGetItem",
    "tables" : {
        "${aws_appsync_datasource.{{$.Table}}.dynamodb_config[0].table_name}": {
            "keys": $util.toJson($ids),
            "consistentRead": true
        }
    }
}
#end
EOF

  response_template = <<EOF
$util.toJson($ctx.result.data["${aws_appsync_datasource.{{$.Table}}.dynamodb_config[0].table_name}"])
EOF
}
